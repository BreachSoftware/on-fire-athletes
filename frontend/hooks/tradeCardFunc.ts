import { apiEndpoints } from "@backend/EnvironmentManager/EnvironmentManager";

/**
 * Function to trade a card
 * @param generatedByUUID - The UUID of the user who generated the card
 * @param cardUUID - The UUID of the card
 * @param senderUUID - The UUID of the sender
 * @param newOwnUUID - The UUID of the new owner
 * @returns A promise that resolves to the response from the API
 */
export async function tradeCard(generatedByUUID: string, cardUUID: string, senderUUID: string, newOwnUUID: string): Promise<Response | null> {
	const myHeaders = new Headers();
	myHeaders.append("Content-Type", "application/json");

	let tradeCardResult: Response | null = null;

	// If the card is generated by the user, then the card is being traded to someone else
	// If the card is not generated by the user, then the serialized card is being transferred to the user
	if (generatedByUUID === senderUUID) {
		const requestOptions = {
			method: "POST",
			headers: myHeaders,
			body: JSON.stringify({
				generatedBy: generatedByUUID,
				uuid: cardUUID,
				newOwner: newOwnUUID,
			}),
		};
		tradeCardResult = await fetch(apiEndpoints.assignCard(), requestOptions);
	} else {
		const requestOptions = {
			method: "POST",
			headers: myHeaders,
			body: JSON.stringify({
				generatedBy: generatedByUUID,
				uuid: cardUUID,
				newOwner: newOwnUUID,
				sender: senderUUID,
			}),
		};
		tradeCardResult = await fetch(apiEndpoints.reassignCard(), requestOptions);
	}

	// If the trade was not successful, return the response
	if (tradeCardResult.status !== 200) {
		return tradeCardResult;
	}

	// Create an order for the card
	const createOrderResponse = await fetch(apiEndpoints.createOrder(), {
		method: "POST",
		headers: myHeaders,
		body: JSON.stringify({
			card_uuid: cardUUID,
			card_generatedBy: generatedByUUID,
			cost_paid: 0,
			sender_uuid: senderUUID,
			receiver_uuid: newOwnUUID,
			digitalCardQuantity: 1,
		}),
	});

	// If the order was not successful, return the response
	if (createOrderResponse.status !== 200) {
		return createOrderResponse;
	}

	// Return the response from the trade
	return tradeCardResult;

}
